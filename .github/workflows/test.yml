name: Test

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  default-target:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Build and Install Python package
      run: |
        python packaging/package_build.py
        pip install *.tar.gz

    - name: Run Test Target
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        REGISTRY: cacitesting.azurecr.io
        MANAGED_IDENTITY: c-aci-testing
        LOCATION: northeurope
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: |
        mkdir default_target_test
        python -m c_aci_testing.target_create default_target_test -n default_target_test
        python -m c_aci_testing.target_run default_target_test -n $TAG

  vscode-integration:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Build and Install Python package
      run: |
        python packaging/package_build.py
        pip install *.tar.gz

    - name: Create Test Repo
      run: |
        mkdir vscode_integration_test
        cd vscode_integration_test
        mkdir .vscode
        wget https://raw.githubusercontent.com/microsoft/confidential-aci-examples/b610e9c3d6ea0cb01a604771b2f3e7463752acde/.vscode/launch.json -O .vscode/launch.json

    - name: Run Test Target
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        REGISTRY: cacitesting.azurecr.io
        MANAGED_IDENTITY: c-aci-testing
        LOCATION: northeurope
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.vscode_run_debug

  github-integration:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Build and Install Python package
      run: |
        python packaging/package_build.py
        pip install *.tar.gz

    - name: Run Test Target
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        REGISTRY: cacitesting.azurecr.io
        MANAGED_IDENTITY: c-aci-testing
        LOCATION: northeurope
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: |
        python -m c_aci_testing.target_create github_integration_test -n github_integration_test
        python -m c_aci_testing.github_workflow_create github_integration_test

  python-runner:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Build and Install Python package
      run: |
        python packaging/package_build.py
        pip install *.tar.gz

    - name: Run Test Target
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        REGISTRY: cacitesting.azurecr.io
        MANAGED_IDENTITY: c-aci-testing
        LOCATION: northeurope
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: |
        mkdir python_runner_test
        cd python_runner_test
        python -m c_aci_testing.target_create python_runner_test -n python_runner_test
        python -m c_aci_testing.vscode_testing python_runner_test
        python -m unittest discover

  individual-scripts:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Build and Install Python package
      run: |
        python packaging/package_build.py
        pip install *.tar.gz

    - name: Create Target
      run: |
        mkdir individual_scripts_test
        python -m c_aci_testing.target_create individual_scripts_test -n individual_scripts_test

    - name: Build Images
      env:
        REGISTRY: cacitesting.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.images_build individual_scripts_test

    - name: Push Images
      env:
        REGISTRY: cacitesting.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.images_push individual_scripts_test

    - name: Generate Policies
      env:
        REGISTRY: cacitesting.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.policies_gen individual_scripts_test

    - name: Deploy Container Groups
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        MANAGED_IDENTITY: c-aci-testing
        LOCATION: northeurope
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.aci_deploy individual_scripts_test -n $DEP_NAME

    - name: Monitor Container Groups
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.aci_monitor -n $DEP_NAME

    - name: Cleanup Container Groups
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION_ID }}
        RESOURCE_GROUP: c-aci-testing
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.aci_remove -n $DEP_NAME
