name: Test Example

# Set permissions to allow logging into Azure
permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DEPLOYMENT_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}

jobs:
  test-example:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ vars.SUBSCRIPTION }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Install c_aci_testing package
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        latest=$(gh release list -R microsoft/confidential-aci-testing -L 1 --json tagName --jq '.[0].tagName')
        gh release download $latest -R microsoft/confidential-aci-testing
        pip install c-aci-testing*.tar.gz

    - name: Build Images
      env:
        REGISTRY: cacitesting.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: c-aci-testing images build <TARGET_PATH>

    - name: Push Images
      env:
        REGISTRY: cacitesting.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: c-aci-testing images push <TARGET_PATH>

    - name: Generate Policies
      env:
        REGISTRY: cacitesting.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: c-aci-testing policies gen <TARGET_PATH>

    - name: Deploy Container Groups
      env:
        SUBSCRIPTION: ${{ vars.SUBSCRIPTION }}
        RESOURCE_GROUP: c-aci-testing
        MANAGED_IDENTITY: c-aci-testing
        LOCATION: northeurope
      run: c-aci-testing aci deploy <TARGET_PATH>

    - name: Monitor Container Groups
      env:
        SUBSCRIPTION: ${{ vars.SUBSCRIPTION }}
        RESOURCE_GROUP: c-aci-testing
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: c-aci-testing aci monitor

    - name: Cleanup Container Groups
      env:
        SUBSCRIPTION: ${{ vars.SUBSCRIPTION }}
        RESOURCE_GROUP: c-aci-testing
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: c-aci-testing aci_remove
